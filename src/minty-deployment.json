{
  "network": "rinkeby",
  "contract": {
    "name": "LuckyLemurs",
    "address": "0x0298f95D1A55894c5f6514ae86D4259559A215e6",
    "signerAddress": "0x9eC9e66985C1bdE845672C707E8ed15F09504530",
    "abi": [
      "constructor()",
      "event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)",
      "event ApprovalForAll(address indexed owner, address indexed operator, bool approved)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)",
      "function WOW_PROVENANCE() view returns (string)",
      "function approve(address to, uint256 tokenId)",
      "function balanceOf(address owner) view returns (uint256)",
      "function baseURI() view returns (string)",
      "function claimReserved(uint256 _number, address _receiver)",
      "function flipSaleStarted()",
      "function getApproved(uint256 tokenId) view returns (address)",
      "function getPrice() view returns (uint256)",
      "function getReservedLeft() view returns (uint256)",
      "function isApprovedForAll(address owner, address operator) view returns (bool)",
      "function maxSupply() view returns (uint256)",
      "function mint(uint256 _nbTokens) payable",
      "function name() view returns (string)",
      "function owner() view returns (address)",
      "function ownerOf(uint256 tokenId) view returns (address)",
      "function renounceOwnership()",
      "function safeTransferFrom(address from, address to, uint256 tokenId)",
      "function safeTransferFrom(address from, address to, uint256 tokenId, bytes _data)",
      "function saleStarted() view returns (bool)",
      "function setApprovalForAll(address operator, bool approved)",
      "function setBaseURI(string _URI)",
      "function setPrice(uint256 _newPrice)",
      "function setProvenanceHash(string provenanceHash)",
      "function setStartingIndex()",
      "function startingIndex() view returns (uint256)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function symbol() view returns (string)",
      "function tokenByIndex(uint256 index) view returns (uint256)",
      "function tokenOfOwnerByIndex(address owner, uint256 index) view returns (uint256)",
      "function tokenURI(uint256 tokenId) view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transferFrom(address from, address to, uint256 tokenId)",
      "function transferOwnership(address newOwner)",
      "function walletOfOwner(address _owner) view returns (uint256[])",
      "function withdraw()"
    ]
  }
}
